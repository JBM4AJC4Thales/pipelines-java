# Maven
- task: DownloadFileshareArtifacts@1
  inputs:
    filesharePath: '\'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
- task: DownloadFileshareArtifacts@1
  inputs:
    filesharePath: '\devops_drop_folder'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://learn.microsoft.com/en-us/azure/devops/pipelines/ecosystems/deploy-linux-vm?view=azure-devops&tabs=java

trigger:
- main


pool:
  vmImage: ubuntu-latest

jobs:  
- deployment: VMDeploy
  displayName: Web deploy
  environment:
    name:  dev
    resourceType: VirtualMachine
    tags: deb11_jbm # Update or remove value to match your tag
  strategy:
    rolling:
     maxParallel: 2  #for percentages, mention as x%
     preDeploy:
       steps:
          - download: current
            artifact: drop
          - script: echo initialize, cleanup, backup, install certs
     deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                sudo java -jar '$(Pipeline.Workspace)/drop/**/target/*.jar'
     routeTraffic:
          steps:
          - script: echo routing traffic
     postRouteTraffic:
          steps:
          - script: echo health check post-route traffic
     on:
          failure:
            steps:
            - script: echo Restore from backup! This is on failure
          success:
            steps:
            - script: echo Notify! This is on success
  

# stages:
# - stage: Build
#   displayName: Build stage
#   jobs:  
#   - job: Build
#     displayName: Build Maven Project
#     steps:
#     - task: Maven@4
#       displayName: 'Maven Package'
#       inputs:
#         mavenPomFile: 'pom.xml'
#     - task: CopyFiles@2
#       displayName: 'Copy Files to artifact staging directory'
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: '**/target/*.?(war|jar)'
#         TargetFolder: $(Build.ArtifactStagingDirectory)
#     - upload: $(Build.ArtifactStagingDirectory)
#       artifact: drop
